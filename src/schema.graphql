#import * from './generated/prisma.graphql'

type Query {
  me: User
}

input EquipmentCreateManyInput {
  create: [EquipmentCreateInput!]
}

input IngredientCreateManyInput {
  create: [IngredientCreateInput!]
}

input EquipmentUpdateManyInput {
  create: [EquipmentCreateInput!]
  delete: [EquipmentWhereUniqueInput!]
  update: [EquipmentUpdateWithWhereUniqueNestedInput!]
}

input IngredientUpdateManyInput {
  create: [IngredientCreateInput!]
  delete: [IngredientWhereUniqueInput!]
  update: [IngredientUpdateWithWhereUniqueNestedInput!]
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  createRecipe(
    name: String!
    yield: Int
    equipment: EquipmentCreateManyInput!
    ingredients: IngredientCreateManyInput!
  ): Recipe
  updateRecipe(id: ID!, data: RecipeUpdateInput!): Recipe
  deleteRecipe(id: ID!): Recipe
  createJam(
    timeline: TimelineWhereUniqueInput!
    date: String!
    recipe: RecipeWhereUniqueInput!
  ): Event
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  name: String!
  timeline: Timeline!
}
